services:
  # Main web application
  - type: web
    name: artemis-ai
    env: python
    region: oregon
    plan: starter
    # Check if requirements file exists and create if not
    buildCommand: |
      if [ ! -f "requirements.txt" ]; then
        echo "Creating requirements.txt file..."
        cat > requirements.txt << EOL
      # Core web framework
      Flask==2.0.1
      Werkzeug==2.0.1
      Jinja2==3.0.1
      gunicorn==20.1.0
      flask-session==0.4.0

      # User authentication
      flask-login==0.5.0
      PyJWT==2.1.0
      itsdangerous==2.0.1

      # Database
      pymongo==3.12.0
      mongoengine==0.23.1
      redis==4.1.0

      # API and HTTP
      requests==2.26.0
      httpx==0.18.2

      # Utilities
      python-dotenv==0.19.0
      pytz==2021.1
      Babel==2.9.1

      # Shopify integration
      ShopifyAPI==8.4.1

      # Error monitoring
      sentry-sdk==1.5.0

      # Generative AI
      google-generativeai==0.3.1
      anthropic==0.5.0
      openai==1.3.0

      # Async support
      asyncio==3.4.3
      EOL
      fi
      pip install -r requirements.txt
    startCommand: gunicorn --bind 0.0.0.0:$PORT --workers 2 --threads 8 --timeout 120 app:app
    healthCheckPath: /
    envVars:
      - key: FLASK_ENV
        value: production
      - key: FLASK_APP
        value: app.py
      - key: MONGODB_URI
        fromDatabase:
          name: artemis-mongodb
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: artemis-redis
          property: connectionString
      - key: FLASK_SECRET_KEY
        generateValue: true
      - key: SHOPIFY_API_KEY
        sync: false
      - key: SHOPIFY_API_SECRET
        sync: false
      - key: SHOPIFY_API_SCOPES
        value: read_products,write_products,read_customers,read_orders,read_inventory,read_analytics,read_marketing_events,read_discounts
      - key: APP_URL
        sync: false
      - key: ENVIRONMENT
        value: production
      - key: ANTHROPIC_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: GEMINI_API_KEY
        sync: false
      - key: SENTRY_DSN
        value: https://4dc0101c88cb34529730fa0ebf6d5c0f@o4508767780208640.ingest.us.sentry.io/4508767781912577
    autoDeploy: true
    disk:
      name: app-data
      mountPath: /app/data
      sizeGB: 10

  # Redis instance for caching and rate limiting
  - type: redis
    name: artemis-redis
    region: oregon
    plan: starter
    ipAllowList:
      - source: 0.0.0.0/0
        description: everywhere
    maxmemoryPolicy: volatile-lru

# Database definitions
databases:
  - name: artemis-mongodb
    region: oregon
    plan: starter
    databaseName: bizops
    ipAllowList:
      - source: 0.0.0.0/0
        description: everywhere
